# docker-compose.yml
version: '3'
services:
  # postgres:
  #   image: "postgres" # use latest official postgres version
  #   command: [ "postgres", "-c", "config_file=/etc/postgresql.conf" ]
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - common_network
  #   env_file:
  #     - postgres.env # configure postgres
  #   volumes:
  #     - postgres-data3:/var/lib/postgresql/data/ # persist data even if container shuts down
  #     - ./pgconf/postgresql.conf:/etc/postgresql.conf # USe custom config
  # zookeeper:
  #   image: debezium/zookeeper:latest
  #   ports:
  #     - 2181:2181
  #     - 2888:2888
  #     - 3888:3888
  #   networks:
  #     - common_network
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   ports:
  #     - 9094:9094
  #     # - 9092:9092
  #   networks:
  #     - common_network
  #   links:
  #     - zookeeper
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
  #     - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094
  #     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
  #     - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
  connect:
    image: debezium/connect:latest
    volumes:
      # - ./connect-config/java.config:/etc/crypto-policies/back-ends/java.config
      - .:/tmp
    ports:
      - 8083:8083
      - 5005:5005
    # networks:
    #   - bridge
    # links:
    #   - kafka
    #   - postgres
    env_file:
      - connect2.env # configure postgres
    # command:
    #   - env
    #   - cp /tmp/connect.env /kafka/config/connect-distributed.properties
    #   - cp /kafka/config.orig/connect-log4j.properties /kafka/config
    #   - echo "hello there"
    #   - /kafka/bin/connect-distributed.sh /kafka/config/connect-distributed.properties
    #   - echo "done"
    # environment:
      # - BOOTSTRAP_SERVERS=kafka:9092
      # - GROUP_ID=1
      # - CONFIG_STORAGE_TOPIC=my_connect_configs
      # - OFFSET_STORAGE_TOPIC=my_connect_offsets
      # - STATUS_STORAGE_TOPIC=my_source_connect_statuses
      # - JAVA_OPTS="-Dcom.sun.net.ssl.checkRevocation=false"
volumes:
  postgres-data3: null # named volumes can be managed easier using docker-compose

networks:
  common_network:
    name: common_network
